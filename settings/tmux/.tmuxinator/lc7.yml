# ~/.tmuxinator/lc.yml

name: peers7 
root: ~/projects/loopchain 

# Optional tmux socket
# socket_name: foo

# Runs before everything. Use it to start daemons etc.
pre:  git fetch && git checkout develop 


# Runs in each window and peer before window/peer specific commands. Useful for setting up interpreter versions.
pre_window: source venv/bin/activate 

# Pass command line options to tmux. Useful for specifying a different tmux.conf.
# tmux_options: -f ~/.tmux.mac.conf

# Change the command to call tmux.  This can be used by derivatives/wrappers like byobu.
# tmux_command: byobu

# Specifies (by name or index) which window will be selected on project startup. If not set, the first window is used.
# startup_window: editor

# Specitifes (by index) which peer of the specified window will be selected on project startup. If not set, the first peer is used.
# startup_peer: 1

# Controls whether the tmux session should be attached to automatically. Defaults to true.
# attach: false

# Runs after everything. Use it to attach to tmux with custom options etc.
# post: tmux -CC attach -t loop

windows:
    - console:
        pre: 
        panes:
            - gtool:
                - printf '\033]2;%s\033\\' 'gtool'
                - loop admin
            - demotool:
                - printf '\033]2;%s\033\\' 'demotool'
                - loop tool
    - peers:
        pre:
        layout: main-vertical
        panes: 
            - peer0:
                - printf '\033]2;%s\033\\' 'peer0(7100)'
                - sleep 1
                - loop peer -d -o _tools/test_0_conf.json
            - peer1:
                - printf '\033]2;%s\033\\' 'peer1(7200)'
                - sleep 2
                - loop peer -d -o _tools/test_1_conf.json
            - peer2:
                - printf '\033]2;%s\033\\' 'peer2(7300)'
                - sleep 3
                - loop peer -d -o _tools/test_2_conf.json
            - peer3:
                - printf '\033]2;%s\033\\' 'peer3(7400)'
                - sleep 4
                - loop peer -d -o _tools/test_3_conf.json
            - peer4:
                - printf '\033]2;%s\033\\' 'peer4(7500)'
                - sleep 5
                - loop peer -d -o _tools/test_4_conf.json
            - peer5:
                - printf '\033]2;%s\033\\' 'peer5(7500)'
                - sleep 6
                - loop peer -d -o _tools/test_5_conf.json
            - peer6:
                - printf '\033]2;%s\033\\' 'peer6(7600)'
                - sleep 7
                - loop peer -d -o _tools/test_6_conf.json
